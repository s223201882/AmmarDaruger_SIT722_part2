# Write Kubernetes Deployment Script

apiVersion: apps/v1  # API version of app
kind: Deployment # telling kuberenetes that this is a deployment container
metadata: #has extra data 
  name: book-catalog # name of deployment 
spec: # specification of instances
  replicas: 2 # need to copies  of our app running
  selector: # look to select right labels to run pods
    matchLabels: # labels linking to right pods
      app: book-catalog # label used to locate pod
  template: # template of pods which will be created
    metadata: # meta data for pods
      labels: # key value pairs for identification of pods
        app: book-catalog # label identifies that pod belongs to book-catalog app, matching the selector
    spec: # describes the pod
      containers: # definition of the container
      - name: book-catalog-container # name of the container
        image: book-catalog:1 # name of image , which is locally built
        ports: # ports exposed by the server
        - containerPort: 8000 # port number
        env: #env variable setting
        - name: DATABASE_URL # string URL used to connect to the db service, external URL value below
          value: "postgresql://s223201882part2_user:D92UYiVvfb3dyllTByWWp9pHC1Agy44D@dpg-crou4md6l47c73fitlog-a.oregon-postgres.render.com/s223201882part2"

---
apiVersion: v1 # API version of app
kind: Service # expose the app to the server
metadata: # meta data regarding service
  name: book-catalog-service # name of the service of catalog app
spec: # specifications of service
  type: NodePort #external traffic accessible to the specified port
  selector: # selecting pod which will be exposed by the service
    app: book-catalog # label of the pods which will be exposed
  ports: # ports to be exposed
      - port: 8000 # will handle incoming traffic
        targetPort: 8000 # will transfer trafic to port 8000 inside the container
        nodePort: 30006 # external port on our local machine
